/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Speechify from "../../../../api/index";
import * as core from "../../../../core";
import { NestedChunk } from "./NestedChunk";

export const SpeechMarks: core.serialization.ObjectSchema<serializers.tts.SpeechMarks.Raw, Speechify.tts.SpeechMarks> =
    core.serialization.object({
        chunks: core.serialization.list(NestedChunk),
        end: core.serialization.number(),
        endTime: core.serialization.property("end_time", core.serialization.number()),
        start: core.serialization.number(),
        startTime: core.serialization.property("start_time", core.serialization.number()),
        type: core.serialization.string(),
        value: core.serialization.string().optional(),
    });

export declare namespace SpeechMarks {
    export interface Raw {
        chunks: NestedChunk.Raw[];
        end: number;
        end_time: number;
        start: number;
        start_time: number;
        type: string;
        value?: string | null;
    }
}
